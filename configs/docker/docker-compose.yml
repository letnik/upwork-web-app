version: '3.8'

services:
  # Backend API
  backend:
    build: ./app/backend
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://upwork_user:upwork_pass@postgres:5432/upwork_app
      - REDIS_URL=redis://redis:6379
      - DEBUG=False
      - ENVIRONMENT=production
    depends_on:
      - postgres
      - redis
    volumes:
      - ./app/backend/logs:/app/logs
    restart: unless-stopped

  # Frontend React App
  frontend:
    build: ./app/frontend
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
      - REACT_APP_ENVIRONMENT=production
    depends_on:
      - backend
    volumes:
      - ./app/frontend/src:/app/src
      - /app/node_modules
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=upwork_app
      - POSTGRES_USER=upwork_user
      - POSTGRES_PASSWORD=upwork_pass
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./app/backend/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: 