#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —É–Ω—ñ–∫–∞–ª—å–Ω–æ—Å—Ç—ñ ID –≤ newspaper
# –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: ./tools/scripts/check_newspaper_ids.sh

set -e

echo "üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É–Ω—ñ–∫–∞–ª—å–Ω–æ—Å—Ç—ñ ID –≤ newspaper..."

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
log() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –Ω–∞—è–≤–Ω–æ—Å—Ç—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏—Ö —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤
check_dependencies() {
    log "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."
    
    if ! command -v find &> /dev/null; then
        error "find –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
        exit 1
    fi
    
    if ! command -v grep &> /dev/null; then
        error "grep –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
        exit 1
    fi
    
    if ! command -v sort &> /dev/null; then
        error "sort –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
        exit 1
    fi
    
    if ! command -v uniq &> /dev/null; then
        error "uniq –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
        exit 1
    fi
    
    log "–í—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –∑–Ω–∞–π–¥–µ–Ω–æ ‚úÖ"
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤–∏—Ç—è–≥—É–≤–∞–Ω–Ω—è ID –∑ –Ω–∞–∑–≤–∏ —Ñ–∞–π–ª—É
extract_id() {
    local filename="$1"
    echo "$filename" | grep -o '^[0-9]\{4\}' || echo ""
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —á–∏ —Ñ–∞–π–ª —î —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–º
is_special_file() {
    local filename="$1"
    case "$filename" in
        "README.md"|"_sandbox.md"|"UPWORK_DEVELOPER_SETUP.md")
            return 0  # true - —Ü–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π —Ñ–∞–π–ª
            ;;
        *)
            return 1  # false - —Ü–µ –∑–≤–∏—á–∞–π–Ω–∏–π —Ñ–∞–π–ª
            ;;
    esac
}

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —á–∏ —Ñ–∞–π–ª –∑–Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ backup –ø–∞–ø—Ü—ñ
is_backup_file() {
    local filepath="$1"
    if [[ "$filepath" == *"/backup"* ]] || [[ "$filepath" == *"/backup_old"* ]]; then
        return 0  # true - —Ü–µ backup —Ñ–∞–π–ª
    else
        return 1  # false - —Ü–µ –æ—Å–Ω–æ–≤–Ω–∏–π —Ñ–∞–π–ª
    fi
}

# –ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ñ–∞–π–ª—ñ–≤ –≤ newspaper
find_newspaper_files() {
    log "–ü–æ—à—É–∫ —Ñ–∞–π–ª—ñ–≤ –≤ newspaper..."
    
    newspaper_files=$(find docs/newspaper -name "*.md" -type f -not -name "README.md")
    count=$(echo "$newspaper_files" | wc -l)
    
    log "–ó–Ω–∞–π–¥–µ–Ω–æ $count —Ñ–∞–π–ª—ñ–≤ –≤ newspaper"
    echo "$newspaper_files"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —É–Ω—ñ–∫–∞–ª—å–Ω–æ—Å—Ç—ñ ID –≤ –ø–∞–ø—Ü—ñ
check_folder_ids() {
    local folder="$1"
    log "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ ID –≤ –ø–∞–ø—Ü—ñ: $folder"
    
    # –ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ñ–∞–π–ª—ñ–≤ –≤ –ø–∞–ø—Ü—ñ
    local files=$(find "$folder" -name "*.md" -type f -not -name "README.md" | sort)
    
    if [ -z "$files" ]; then
        info "–ü–∞–ø–∫–∞ $folder –ø–æ—Ä–æ–∂–Ω—è –∞–±–æ –Ω–µ –º—ñ—Å—Ç–∏—Ç—å .md —Ñ–∞–π–ª—ñ–≤"
        return
    fi
    
    # –†–æ–∑–¥—ñ–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–Ω—ñ —Ç–∞ backup
    local main_files=""
    local backup_files=""
    
    while IFS= read -r file; do
        if [ -n "$file" ]; then
            if is_backup_file "$file"; then
                backup_files="$backup_files$file"$'\n'
            else
                main_files="$main_files$file"$'\n'
            fi
        fi
    done <<< "$files"
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
    local main_ids=""
    local main_duplicates=""
    
    while IFS= read -r file; do
        if [ -n "$file" ]; then
            local basename=$(basename "$file")
            if ! is_special_file "$basename"; then
                local id=$(extract_id "$basename")
                if [ -n "$id" ]; then
                    if echo "$main_ids" | grep -q "$id"; then
                        main_duplicates="$main_duplicates$id"$'\n'
                    else
                        main_ids="$main_ids$id"$'\n'
                    fi
                fi
            fi
        fi
    done <<< "$main_files"
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ backup —Ñ–∞–π–ª—ñ–≤
    local backup_ids=""
    local backup_duplicates=""
    
    while IFS= read -r file; do
        if [ -n "$file" ]; then
            local basename=$(basename "$file")
            local id=$(extract_id "$basename")
            if [ -n "$id" ]; then
                if echo "$backup_ids" | grep -q "$id"; then
                    backup_duplicates="$backup_duplicates$id"$'\n'
                else
                    backup_ids="$backup_ids$id"$'\n'
                fi
            fi
        fi
    done <<< "$backup_files"
    
    # –í–∏–≤–µ–¥–µ–Ω–Ω—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ñ–≤
    if [ -n "$main_duplicates" ]; then
        error "–ó–Ω–∞–π–¥–µ–Ω–æ –¥—É–±–ª—ñ–∫–∞—Ç–∏ ID –≤ –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ñ–∞–π–ª–∞—Ö –ø–∞–ø–∫–∏ $folder:"
        echo "$main_duplicates" | sort | uniq | while read -r id; do
            if [ -n "$id" ]; then
                echo "  - ID $id –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∫—ñ–ª—å–∫–∞ —Ä–∞–∑—ñ–≤ –≤ –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ñ–∞–π–ª–∞—Ö"
            fi
        done
    else
        log "‚úÖ –í—Å—ñ ID —É–Ω—ñ–∫–∞–ª—å–Ω—ñ –≤ –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ñ–∞–π–ª–∞—Ö –ø–∞–ø–∫–∏ $folder"
    fi
    
    if [ -n "$backup_duplicates" ]; then
        warn "–ó–Ω–∞–π–¥–µ–Ω–æ –¥—É–±–ª—ñ–∫–∞—Ç–∏ ID –≤ backup —Ñ–∞–π–ª–∞—Ö –ø–∞–ø–∫–∏ $folder:"
        echo "$backup_duplicates" | sort | uniq | while read -r id; do
            if [ -n "$id" ]; then
                echo "  - ID $id –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –∫—ñ–ª—å–∫–∞ —Ä–∞–∑—ñ–≤ –≤ backup —Ñ–∞–π–ª–∞—Ö"
            fi
        done
    fi
    
    # –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    local main_count=$(echo "$main_files" | wc -l)
    local backup_count=$(echo "$backup_files" | wc -l)
    
    info "–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–ø–∫–∏ $folder:"
    echo "  - –û—Å–Ω–æ–≤–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤: $main_count"
    echo "  - Backup —Ñ–∞–π–ª—ñ–≤: $backup_count"
    
    # –ü–æ–∫–∞–∑–∞—Ç–∏ ID –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
    if [ -n "$main_ids" ]; then
        info "ID –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ –≤ $folder:"
        echo "$main_ids" | sort -n | while read -r id; do
            if [ -n "$id" ]; then
                echo "  - $id"
            fi
        done
    fi
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É ID
check_id_format() {
    local folder="$1"
    log "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É ID –≤ –ø–∞–ø—Ü—ñ: $folder"
    
    local files=$(find "$folder" -name "*.md" -type f -not -name "README.md")
    local format_errors=0
    
    while IFS= read -r file; do
        if [ -n "$file" ]; then
            local basename=$(basename "$file")
            
            # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —Ñ–∞–π–ª–∏
            if is_special_file "$basename"; then
                continue
            fi
            
            local id=$(extract_id "$basename")
            
            if [ -n "$id" ]; then
                # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–æ—Ä–º–∞—Ç—É (4 —Ü–∏—Ñ—Ä–∏)
                if ! echo "$id" | grep -qE '^[0-9]{4}$'; then
                    warn "–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç ID –≤ —Ñ–∞–π–ª—ñ $file: $id"
                    format_errors=$((format_errors + 1))
                fi
            else
                warn "–§–∞–π–ª –±–µ–∑ ID: $file"
                format_errors=$((format_errors + 1))
            fi
        fi
    done <<< "$files"
    
    if [ $format_errors -eq 0 ]; then
        log "‚úÖ –í—Å—ñ ID –º–∞—é—Ç—å –ø—Ä–∞–≤–∏–ª—å–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç –≤ –ø–∞–ø—Ü—ñ $folder"
    fi
}

# –ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –Ω–∞—Å—Ç—É–ø–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–Ω–æ–≥–æ ID (—Ç—ñ–ª—å–∫–∏ –≤ –æ—Å–Ω–æ–≤–Ω–∏—Ö —Ñ–∞–π–ª–∞—Ö)
find_next_available_id() {
    local folder="$1"
    
    local files=$(find "$folder" -name "*.md" -type f -not -name "README.md")
    local max_id=0
    
    while IFS= read -r file; do
        if [ -n "$file" ]; then
            # –ü—Ä–æ–ø—É—Å–∫–∞—î–º–æ backup —Ñ–∞–π–ª–∏ —Ç–∞ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —Ñ–∞–π–ª–∏
            if is_backup_file "$file"; then
                continue
            fi
            
            local basename=$(basename "$file")
            if is_special_file "$basename"; then
                continue
            fi
            
            local id=$(extract_id "$basename")
            
            if [ -n "$id" ]; then
                # –ö–æ–Ω–≤–µ—Ä—Ç—É—î–º–æ ID –≤ —á–∏—Å–ª–æ –¥–ª—è –ø–æ—Ä—ñ–≤–Ω—è–Ω–Ω—è
                local id_num=$((10#$id))
                if [ "$id_num" -gt "$max_id" ]; then
                    max_id=$id_num
                fi
            fi
        fi
    done <<< "$files"
    
    local next_id=$((max_id + 1))
    printf "%04d" $next_id
}

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
main() {
    log "–ü–æ—á–∞—Ç–æ–∫ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —É–Ω—ñ–∫–∞–ª—å–Ω–æ—Å—Ç—ñ ID –≤ newspaper..."
    
    check_dependencies
    
    # –ó–Ω–∞—Ö–æ–¥–∂–µ–Ω–Ω—è –≤—Å—ñ—Ö —Ñ–∞–π–ª—ñ–≤
    newspaper_files=$(find_newspaper_files)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∫–æ–∂–Ω–æ—ó –ø–∞–ø–∫–∏
    local folders=("docs/newspaper/report" "docs/newspaper/research")
    
    for folder in "${folders[@]}"; do
        if [ -d "$folder" ]; then
            echo ""
            check_folder_ids "$folder"
            check_id_format "$folder"
            
            # –ó–Ω–∞–π—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –¥–æ—Å—Ç—É–ø–Ω–∏–π ID
            next_id=$(find_next_available_id "$folder")
            info "–ù–∞—Å—Ç—É–ø–Ω–∏–π –¥–æ—Å—Ç—É–ø–Ω–∏–π ID –≤ $folder: $next_id"
        else
            warn "–ü–∞–ø–∫–∞ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–∞: $folder"
        fi
    done
    
    log "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ‚úÖ"
    
    # –ü—ñ–¥—Å—É–º–∫–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    echo ""
    log "–ü—ñ–¥—Å—É–º–∫–æ–≤–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:"
    echo "  - –ü–µ—Ä–µ–≤—ñ—Ä–µ–Ω–æ –ø–∞–ø–æ–∫: ${#folders[@]}"
    echo "  - –ó–Ω–∞–π–¥–µ–Ω–æ —Ñ–∞–π–ª—ñ–≤: $(echo "$newspaper_files" | wc -l)"
    echo ""
    log "–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó:"
    echo "  1. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ ID –≤ –∫–æ–∂–Ω—ñ–π –ø–∞–ø—Ü—ñ"
    echo "  2. –î–æ—Ç—Ä–∏–º—É–π—Ç–µ—Å—è —Ñ–æ—Ä–º–∞—Ç—É 4-–∑–Ω–∞—á–Ω–æ–≥–æ –Ω–æ–º–µ—Ä–∞ (0001, 0002, ...)"
    echo "  3. –ü–µ—Ä–µ–≤—ñ—Ä—è–π—Ç–µ ID –ø–µ—Ä–µ–¥ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è–º –Ω–æ–≤–æ–≥–æ —Ñ–∞–π–ª—É"
    echo "  4. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –Ω–∞—Å—Ç—É–ø–Ω–∏–π –¥–æ—Å—Ç—É–ø–Ω–∏–π ID"
    echo "  5. Backup —Ñ–∞–π–ª–∏ –Ω–µ –≤–ø–ª–∏–≤–∞—é—Ç—å –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –Ω–æ–≤–∏—Ö ID"
}

# –ó–∞–ø—É—Å–∫ –æ—Å–Ω–æ–≤–Ω–æ—ó —Ñ—É–Ω–∫—Ü—ñ—ó
main "$@" 