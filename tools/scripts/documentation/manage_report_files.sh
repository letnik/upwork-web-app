#!/bin/bash

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ–∞–π–ª–∞–º–∏ –≤ –ø–∞–ø—Ü—ñ report
# –û–±–º–µ–∂—É—î –∫—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–∞–π–ª—ñ–≤ –¥–æ 10, —Ä–µ—à—Ç—É –ø–µ—Ä–µ–º—ñ—â—É—î –≤ _old

REPORT_DIR="docs/newspaper/report"
OLD_DIR="$REPORT_DIR/_old"
MAX_FILES=10

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —ñ—Å–Ω—É–≤–∞–Ω–Ω—è –ø–∞–ø–æ–∫
check_directories() {
    if [ ! -d "$REPORT_DIR" ]; then
        error "–ü–∞–ø–∫–∞ $REPORT_DIR –Ω–µ —ñ—Å–Ω—É—î!"
        exit 1
    fi
    
    if [ ! -d "$OLD_DIR" ]; then
        log "–°—Ç–≤–æ—Ä—é—é –ø–∞–ø–∫—É $OLD_DIR"
        mkdir -p "$OLD_DIR"
    fi
}

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ø–∏—Å–∫—É —Ñ–∞–π–ª—ñ–≤ (–∫—Ä—ñ–º _old)
get_report_files() {
    find "$REPORT_DIR" -maxdepth 1 -type f -name "*.md" | grep -v "_old" | sort
}

# –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ –∫—ñ–ª—å–∫–æ—Å—Ç—ñ —Ñ–∞–π–ª—ñ–≤
count_files() {
    get_report_files | wc -l
}

# –ü–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö —Ñ–∞–π–ª—ñ–≤ –≤ _old
move_old_files() {
    local file_count=$(count_files)
    
    if [ "$file_count" -gt "$MAX_FILES" ]; then
        local files_to_move=$((file_count - MAX_FILES))
        log "–ó–Ω–∞–π–¥–µ–Ω–æ $file_count —Ñ–∞–π–ª—ñ–≤, –º–∞–∫—Å–∏–º—É–º $MAX_FILES. –ü–µ—Ä–µ–º—ñ—â—É—é $files_to_move —Ñ–∞–π–ª—ñ–≤ –≤ _old"
        
        # –û—Ç—Ä–∏–º—É—î–º–æ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª—ñ–≤ –¥–ª—è –ø–µ—Ä–µ–º—ñ—â–µ–Ω–Ω—è (–Ω–∞–π—Å—Ç–∞—Ä—ñ—à—ñ)
        local files_to_move_list=$(get_report_files | head -n "$files_to_move")
        
        for file in $files_to_move_list; do
            local filename=$(basename "$file")
            log "–ü–µ—Ä–µ–º—ñ—â—É—é $filename –≤ _old"
            mv "$file" "$OLD_DIR/"
            success "–§–∞–π–ª $filename –ø–µ—Ä–µ–º—ñ—â–µ–Ω–æ –≤ _old"
        done
    else
        log "–ö—ñ–ª—å–∫—ñ—Å—Ç—å —Ñ–∞–π–ª—ñ–≤ ($file_count) –Ω–µ –ø–µ—Ä–µ–≤–∏—â—É—î –ª—ñ–º—ñ—Ç ($MAX_FILES)"
    fi
}

# –ü–æ–∫–∞–∑ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
show_stats() {
    local current_files=$(count_files)
    local old_files=$(find "$OLD_DIR" -type f -name "*.md" | wc -l)
    
    echo
    echo "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–∞–ø–∫–∏ report:"
    echo "   –ü–æ—Ç–æ—á–Ω—ñ —Ñ–∞–π–ª–∏: $current_files/$MAX_FILES"
    echo "   –§–∞–π–ª–∏ –≤ _old: $old_files"
    echo
}

# –ü–æ–∫–∞–∑ —Å–ø–∏—Å–∫—É —Ñ–∞–π–ª—ñ–≤
list_files() {
    echo "üìÅ –ü–æ—Ç–æ—á–Ω—ñ —Ñ–∞–π–ª–∏ –≤ report:"
    get_report_files | while read -r file; do
        local filename=$(basename "$file")
        local size=$(du -h "$file" | cut -f1)
        local date=$(stat -f "%Sm" -t "%Y-%m-%d %H:%M" "$file")
        echo "   $filename ($size, $date)"
    done
    
    echo
    echo "üìÅ –§–∞–π–ª–∏ –≤ _old:"
    find "$OLD_DIR" -type f -name "*.md" | while read -r file; do
        local filename=$(basename "$file")
        local size=$(du -h "$file" | cut -f1)
        local date=$(stat -f "%Sm" -t "%Y-%m-%d %H:%M" "$file")
        echo "   $filename ($size, $date)"
    done
}

# –û—á–∏—â–µ–Ω–Ω—è _old (–≤–∏–¥–∞–ª–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ —Å—Ç–∞—Ä—ñ—à–µ 30 –¥–Ω—ñ–≤)
cleanup_old() {
    local days=30
    log "–û—á–∏—â–µ–Ω–Ω—è —Ñ–∞–π–ª—ñ–≤ –≤ _old —Å—Ç–∞—Ä—ñ—à–µ $days –¥–Ω—ñ–≤"
    
    local deleted_count=0
    find "$OLD_DIR" -type f -name "*.md" -mtime +$days | while read -r file; do
        local filename=$(basename "$file")
        log "–í–∏–¥–∞–ª—è—é —Å—Ç–∞—Ä–∏–π —Ñ–∞–π–ª: $filename"
        rm "$file"
        deleted_count=$((deleted_count + 1))
    done
    
    if [ "$deleted_count" -gt 0 ]; then
        success "–í–∏–¥–∞–ª–µ–Ω–æ $deleted_count —Å—Ç–∞—Ä–∏—Ö —Ñ–∞–π–ª—ñ–≤"
    else
        log "–°—Ç–∞—Ä–∏—Ö —Ñ–∞–π–ª—ñ–≤ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ"
    fi
}

# –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
main() {
    case "${1:-auto}" in
        "auto")
            log "–ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è —Ñ–∞–π–ª–∞–º–∏ –≤ report"
            check_directories
            move_old_files
            show_stats
            ;;
        "stats")
            check_directories
            show_stats
            list_files
            ;;
        "list")
            check_directories
            list_files
            ;;
        "cleanup")
            check_directories
            cleanup_old
            ;;
        "help"|"-h"|"--help")
            echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è: $0 [–∫–æ–º–∞–Ω–¥–∞]"
            echo
            echo "–ö–æ–º–∞–Ω–¥–∏:"
            echo "  auto     - –ê–≤—Ç–æ–º–∞—Ç–∏—á–Ω–µ —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è (–∑–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º)"
            echo "  stats    - –ü–æ–∫–∞–∑–∞—Ç–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"
            echo "  list     - –ü–æ–∫–∞–∑–∞—Ç–∏ —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª—ñ–≤"
            echo "  cleanup  - –û—á–∏—Å—Ç–∏—Ç–∏ —Å—Ç–∞—Ä—ñ —Ñ–∞–π–ª–∏ –≤ _old"
            echo "  help     - –ü–æ–∫–∞–∑–∞—Ç–∏ —Ü—é –¥–æ–≤—ñ–¥–∫—É"
            echo
            echo "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:"
            echo "  –ú–∞–∫—Å–∏–º—É–º —Ñ–∞–π–ª—ñ–≤ –≤ report: $MAX_FILES"
            echo "  –ü–∞–ø–∫–∞ report: $REPORT_DIR"
            echo "  –ü–∞–ø–∫–∞ _old: $OLD_DIR"
            ;;
        *)
            error "–ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞: $1"
            echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ '$0 help' –¥–ª—è –¥–æ–≤—ñ–¥–∫–∏"
            exit 1
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞
main "$@" 