version: '3.8'

services:
  # API Gateway
  api-gateway:
    build: ./api-gateway
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/upwork_app
      - REDIS_URL=redis://redis:6379
      - AUTH_SERVICE_URL=http://auth-service:8001
      - UPWORK_SERVICE_URL=http://upwork-service:8002
      - AI_SERVICE_URL=http://ai-service:8003
      - ANALYTICS_SERVICE_URL=http://analytics-service:8004
      - NOTIFICATION_SERVICE_URL=http://notification-service:8005
    depends_on:
      - postgres
      - redis
      - auth-service
      - upwork-service
      - ai-service
      - analytics-service
      - notification-service
    networks:
      - upwork-network

  # Auth Service
  auth-service:
    build: ./services/auth-service
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/upwork_app
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-your-secret-key-change-in-production}
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-encryption-key-change-in-production}
      - UPWORK_CLIENT_ID=${UPWORK_CLIENT_ID}
      - UPWORK_CLIENT_SECRET=${UPWORK_CLIENT_SECRET}
      - UPWORK_CALLBACK_URL=${UPWORK_CALLBACK_URL:-http://localhost:8000/auth/upwork/callback}
      - ENVIRONMENT=production
      - DEBUG=false
    depends_on:
      - postgres
      - redis
    networks:
      - upwork-network
    volumes:
      - ./logs/auth:/app/logs

  # Upwork Service
  upwork-service:
    build: ./services/upwork-service
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/upwork_app
      - REDIS_URL=redis://redis:6379
      - UPWORK_CLIENT_ID=${UPWORK_CLIENT_ID}
      - UPWORK_CLIENT_SECRET=${UPWORK_CLIENT_SECRET}
      - ENVIRONMENT=production
      - DEBUG=false
    depends_on:
      - postgres
      - redis
    networks:
      - upwork-network
    volumes:
      - ./logs/upwork:/app/logs

  # AI Service
  ai-service:
    build: ./services/ai-service
    environment:
      - REDIS_URL=redis://redis:6379
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - ENVIRONMENT=production
      - DEBUG=false
    depends_on:
      - redis
    networks:
      - upwork-network
    volumes:
      - ./logs/ai:/app/logs

  # Analytics Service
  analytics-service:
    build: ./services/analytics-service
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/upwork_app
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=production
      - DEBUG=false
    depends_on:
      - postgres
      - redis
    networks:
      - upwork-network
    volumes:
      - ./logs/analytics:/app/logs

  # Notification Service
  notification-service:
    build: ./services/notification-service
    environment:
      - REDIS_URL=redis://redis:6379
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - ENVIRONMENT=production
      - DEBUG=false
    depends_on:
      - redis
    networks:
      - upwork-network
    volumes:
      - ./logs/notification:/app/logs

  # PostgreSQL Database
  postgres:
    image: postgres:15
    environment:
      - POSTGRES_DB=upwork_app
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - upwork-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - upwork-network

  # Nginx (для production)
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - api-gateway
    networks:
      - upwork-network

volumes:
  postgres_data:
  redis_data:

networks:
  upwork-network:
    driver: bridge
